openapi: "3.0.0"
info:
  title: Todo API
  version: 1.0.0
tags:
  - name: "todo"
    description: "Todo items"
servers:
  - url: http://localhost:8080/api/v1
    description: "localhost"
paths:
  /todos:
    get:
      tags:
        - todo
      operationId: listTodos
      summary: List Todo items
      responses:
        '200':
          description: |-
            Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoListResponse'
    post:
      tags:
        - todo
      operationId: addTodo
      summary: Add a new Todo item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreate'
      responses:
        '201':
          description: |-
            Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todos/{id}:
    get:
      tags:
        - todo
      operationId: getTodo
      summary: Get a Todo item
      responses:
        '200':
          description: |-
            Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    put:
      tags:
        - todo
      operationId: updateTodo
      summary: Update a Todo item
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreate'
      responses:
        '200':
          description: |-
            Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        400:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - todo
      operationId: deleteTodo
      summary: Delete a Todo item
      responses:
        '204':
          description: |-
            Success
components:
  schemas:
    Todo:
      type: object
      required:
        - "title"
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          example: "Buy milk"
        completed:
          type: boolean
          example: false
#        created_at:
#          type: string
#          format: date-time
#          readOnly: true
#          description: Created time of Todo item
#          example: '2020-20-20T20:20:20Z'
#        updated_at:
#          type: string
#          format: date-time
#          readOnly: true
#          description: Last updated time of Todo item
#          example: '2020-20-20T20:20:20Z'
    TodoListResponse:
      type: object
      properties:
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        meta:
          type: object
          properties:
            total_items:
              type: integer
              format: int64
              description: Total Items
              example: 100
    TodoCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          example: "Buy milk"
        completed:
          type: boolean
          example: false
    Error:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              code:
                type: string
              description:
                type: string
